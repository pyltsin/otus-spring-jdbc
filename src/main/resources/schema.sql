DROP table if exists comment;
DROP TABLE IF EXISTS author_to_book;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS book;
DROP TABLE IF EXISTS author;

DROP TABLE IF EXISTS acl_sid;
DROP TABLE IF EXISTS acl_class;
DROP TABLE IF EXISTS acl_object_identity;
DROP TABLE IF EXISTS acl_entry;

CREATE table genre (
  id varchar(2000) primary key
);

CREATE TABLE author (
  id   integer primary key auto_increment,
  name varchar(2000)
);

CREATE TABLE book (
  id          integer primary key auto_increment,
  description varchar(2000),
  genre       varchar(2000) references genre (id)
);

CREATE Table author_to_book (
  book_id   integer not null   references book (id),
  author_id integer not null   references author (id),
);

alter table author_to_book
  add primary key (book_id, author_id);

CREATE TABLE comment (
  id      integer primary key auto_increment,
  book_id integer not null references book (id),
  comment varchar(2000)
);


create table acl_sid (
  id        bigint generated by default as identity (start with 100) not null primary key,
  principal boolean                                                  not null,
  sid       varchar_ignorecase(100)                                  not null,
  constraint unique_uk_1 unique (sid, principal)
);

create table acl_class (
  id    bigint generated by default as identity (start with 100) not null primary key,
  class varchar_ignorecase(100)                                  not null,
  constraint unique_uk_2 unique (class)
);

create table acl_object_identity (
  id                 bigint generated by default as identity (start with 100) not null primary key,
  object_id_class    bigint                                                   not null,
  object_id_identity bigint                                                   not null,
  parent_object      bigint,
  owner_sid          bigint                                                   not null,
  entries_inheriting boolean                                                  not null,
  constraint unique_uk_3 unique (object_id_class, object_id_identity),
  constraint foreign_fk_1 foreign key (parent_object) references acl_object_identity (id),
  constraint foreign_fk_2 foreign key (object_id_class) references acl_class (id),
  constraint foreign_fk_3 foreign key (owner_sid) references acl_sid (id)
);

create table acl_entry (
  id                  bigint generated by default as identity (start with 100) not null primary key,
  acl_object_identity bigint                                                   not null,
  ace_order           int                                                      not null,
  sid                 bigint                                                   not null,
  mask                integer                                                  not null,
  granting            boolean                                                  not null,
  audit_success       boolean                                                  not null,
  audit_failure       boolean                                                  not null,
  constraint unique_uk_4 unique (acl_object_identity, ace_order),
  constraint foreign_fk_4 foreign key (acl_object_identity)
  references acl_object_identity (id),
  constraint foreign_fk_5 foreign key (sid) references acl_sid (id)
);

